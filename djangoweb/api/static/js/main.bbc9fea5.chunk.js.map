{"version":3,"sources":["contexts/ThemeContextProvider.js","components/Navbar.js","components/Header.js","components/Container.js","settings/mocks.js","components/Plot.js","reducers/plottingsReducer.js","contexts/PlottingsContextProvider.js","api/plottings.js","reducers/basicReducer.js","contexts/BasicContextProvider.js","components/Loading.js","components/Plottings.js","reducers/mlReducer.js","contexts/MlContextProvider.js","api/ml.js","components/Ml.js","api/basic.js","components/Upload.js","components/Basic.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","console","log","setState","Provider","value","this","props","children","Component","Navbar","useContext","theme","style","background","color","className","onClick","Header","src","width","alt","href","Container","data_plotting","histogram1d","heading","p","histogram2d","compensation","custom_transformation","scatter","threshold_gate","data_ml","histogram","gausian","gausian_table","gausian_posterior","gausian_posterior_table","gausian_filtered_low_posterior","gausian_mixture_model_two_channels","k_means","k_means2","Plot","image","data_section","data","id","title","toUpperCase","slice","split","join","plottingsReducer","action","type","payload","plottings","PlottingsContext","PlottingsContextProvider","useReducer","dispatch","api","read","current_channels","channel1","channel2","axios","get","server","then","res","catch","error","basicReducer","newState1","Array","isArray","channels","ts","Date","now","BasicContext","BasicContextProvider","basic","Loading","Plottings","useState","loading","setLoading","useEffect","Object","keys","length","map","key","mlReducer","ml","MlContext","MlContextProvider","Ml","Upload","fileRef","createRef","method","encType","ref","name","multiple","aria-describedby","htmlFor","e","preventDefault","formData","FormData","files","current","append","post","headers","window","location","reload","err","uploadFile","Options","ch","Basic","setCurrentChannels","channels1","setChannels1","channels2","setChannels2","transformation","bins","attributes","setAttributes","shift","setStateAttributes","atts","onChange","target","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bbc9fea5.chunk.js","sourcesContent":["import React from 'react'\n\nexport const ThemeContext = React.createContext();\n\n\nclass ThemeContextProvider extends React.Component {\n    state = {\n        isLightTheme: true,\n        light: {syntax: '#555', ui: '#ddd', bg: '#eee'},\n        dark: {syntax: '#ddd', ui: '#333', bg: '#555'},\n    }\n\n    toggleTheme = () => {\n        console.log('Inside isLightTheme')\n        this.setState({isLightTheme: ! this.state.isLightTheme});\n    }\n\n    render() {\n        return (\n            <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>\n                {this.props.children}\n            </ThemeContext.Provider>\n        )\n    }\n}\n\nexport default ThemeContextProvider;\n","import React from 'react'\nimport {ThemeContext} from '../contexts/ThemeContextProvider'\n\nconst Navbar = () => {\n    const {isLightTheme, light, dark, toggleTheme} = React.useContext(ThemeContext);\n    const theme = isLightTheme ? light : dark;\n\n    return (\n        <nav style={{background: theme.bg, color: theme.syntax}}>\n            <ul className=\"inline\">\n                <li style={{background: theme.ui}} className=\"list-inline-item\">\n                    <h1>CELL ANALYSIS</h1>\n                </li>\n                <li style={{background: theme.ui}} className=\"list-inline-item\"><button onClick={toggleTheme}>C</button></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react'\nimport {apiServer} from \"../settings/constants\";\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"py-5 text-center\">\n                <img src={apiServer + \"/static/img/logo192.png\"} width=\"200\" alt=\"img\"/>\n                <br/>\n                <a href={apiServer + \"/api/logout\"} className=\"btn btn-warning\">Logout</a>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react'\nimport Header from './Header'\n\nclass Container extends React.Component {\n    render() {\n        return(\n            <div className=\"container\">\n                <Header />\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Container;\n","export const data_plotting = {\n    histogram1d: {\n        heading: 'Histogram 1 D',\n        p: `\n                This is the histogram in one dimension for the FCS file\n            `\n    },\n    histogram2d: {\n        heading: 'Histogram 2 D',\n        p: `This is the histogram in two dimensions for the FCS file. It is plotting using the provided two channels from the\n                select lists.\n            `\n    },\n    compensation: {\n        heading: 'Compensation',\n        p: `This is obtained by interchanging channels data and multiplied\n                (by 0.15 for channel 1, by 0.32 form channel 2) and subtracted from respective channels.\n            `\n    },\n    custom_transformation: {\n        heading: 'Custom Transformation',\n        p: `\n                This is custom transformation plot. The custom transformation is obtained by taking the log of each channel.\n            `\n    },\n    scatter: {\n        heading: 'Scatter plot',\n        p: `\n                This is scatter plot for the two channels selected.\n            `\n    },\n    threshold_gate: {\n        heading: 'Threshold Gate',\n        p: `\n                This is threshold gate plot. This is obtained by applying x and y gating on axes.\n            `\n    }\n}\nexport const data_ml = {\n    histogram: {\n        heading: 'Histogram',\n        p: `\n                The histogram of the two tubes which were treated with two different concentrations of Doxycycline.\n            `\n    },\n    gausian: {\n        heading: 'Gausian plot',\n        p: `\n                The Gausian Machine learning model is used to separate the data into two/more populations. It uses a default\n                estimation method for parameters.\n            `\n    },\n    gausian_table: {\n        heading: 'Gausian Table',\n        p: `\n                We applied GaussianMixtureModelOp method to add new piece of meta data to each event in the data set. The\n                events are labelled as Gauss_1 and Gauss_2 in the table.\n            `\n    },\n    gausian_posterior: {\n        heading: 'Gausian Posterior',\n        p: `\n                Sometimes the mixtures are close enough to be separated and therefore we filtered the events by applying posterior probability.\n            `\n    },\n    gausian_posterior_table: {\n        heading: 'Gausian Posterior Table',\n        p: `\n                The table shows the posterior probability of each event, marked as Gauss_1_ posterior and Gauss_2_posterior.\n            `\n    },\n    gausian_filtered_low_posterior: {\n        heading: 'Gausian filtered low posterior',\n        p: `\n                The is the plot after filtering out the low posterior probability of each event.\n            `\n    },\n    gausian_mixture_model_two_channels: {\n        heading: 'Gausian mixture model two channels',\n        p: `\n                The GaussianMixtureOp can work with multidimensions of channels. This is a plot of two channels workflow.\n            `\n    },\n    k_means: {\n        heading: 'K Means',\n        p: `\n                The plot shows the K Means in the Gaussian mixture model. The centroids are marked with a star symbol.\n            `\n    },\n    k_means2: {\n        heading: 'K Means 3 clusters',\n        p: `\n                The plot shows the K Means in the Gaussian mixture model. The centroids are marked with a star symbol.\n                The shows a more clear clustering by taking the log of the channels instead.\n            `\n    },\n}\n","import React from 'react';\nimport {data_plotting, data_ml} from \"../settings/mocks\";\n\nconst Plot = (props) => {\n    const {image, data_section} = props;\n    const data = data_section === 'data_ml' ? data_ml : data_plotting;\n    const {heading, p} = data[image.id] ? data[image.id] : {heading: 'Heading', p: 'Para'};\n    const title = image.id[0].toUpperCase() + image.id.slice(1).split('_').join(\" \");\n    return (\n        <div className={data_section === 'data_ml' ? \"col-sm-12 py-2\" : \"col-sm-6 py-2\"}>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    {title}\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <img className=\"img-fluid\" src={image.src} alt={image.id}/>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <h5 className=\"card-title\">{heading}</h5>\n                            <p className=\"card-text\">{p}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Plot;\n","\nconst plottingsReducer = (state, action) => {\n\n    switch (action.type) {\n        case 'ADD_PLOTTINGS':\n            console.log('ADD_PLOTTINGS', action )\n            return {...state, ...action.payload.plottings}\n        default:\n            return state;\n    }\n};\n\nexport default plottingsReducer;\n","import React from 'react';\nimport plottingsReducer from '../reducers/plottingsReducer';\n\nexport const PlottingsContext = React.createContext();\n\n\nconst PlottingsContextProvider = (props) => {\n    const [plottings, dispatch] = React.useReducer(plottingsReducer, {});\n    return (\n        <PlottingsContext.Provider value={{plottings, dispatch}}>\n            {props.children}\n        </PlottingsContext.Provider>\n    )\n};\n\nexport default PlottingsContextProvider;\n","import axios from 'axios';\nimport {apiServer} from '../settings/constants';\n\nconst endPoint = '/api/plottings';\nconst server = apiServer + endPoint;\n\nconst api = {\n    read: (current_channels = {channel1: 'HDR-T', channel2: 'FSC-A'}) =>\n        axios.get(server + '?' + 'ch1=' + current_channels.channel1 + '&ch2=' + current_channels.channel2)\n            .then(res => res.data)\n            .catch(error =>\n                console.error(error)\n            )\n};\nexport default api;\n","\nconst basicReducer = (state, action) => {\n\n    switch (action.type) {\n        case 'ADD_BASIC':\n            console.log('ADD_BASIC', action );\n            const newState1 = {...state, ...action.payload};\n            if(Array.isArray(newState1.channels)) {\n                const current_channels = {channel1: newState1.channels[0], channel2: newState1.channels[1]};\n                newState1.current_channels = current_channels;\n            }\n            return newState1;\n        case 'SET_CHANNELS':\n            const newState = {...state, ...action.payload};\n            return newState;\n        case 'UPDATE_TS':\n            const newState2 = {...state, ...action.payload, ts: Date.now()};\n            return newState2;\n\n        default:\n            return state;\n    }\n};\n\nexport default basicReducer;\n","import React from 'react';\nimport basicReducer from '../reducers/basicReducer';\n\nexport const BasicContext = React.createContext();\n\n\nconst BasicContextProvider = (props) => {\n    const [basic, dispatch] = React.useReducer(basicReducer, {});\n    return (\n        <BasicContext.Provider value={{basic, dispatch}}>\n            {props.children}\n        </BasicContext.Provider>\n    )\n};\n\nexport default BasicContextProvider;\n","import React from 'react';\nimport {apiServer} from \"../settings/constants\";\n\nconst Loading = () => {\n    const imageUrl = apiServer + '/static/img/loading.gif';\n    return (\n        <img src={imageUrl} width=\"150\" alt=\"Loading...\"/>\n    )\n};\n\nexport default Loading;\n","import React, {useEffect, useContext, useState} from 'react';\nimport Plot from './Plot';\nimport {PlottingsContext} from '../contexts/PlottingsContextProvider';\nimport api from '../api/plottings';\nimport {BasicContext} from \"../contexts/BasicContextProvider\";\nimport {apiServer} from \"../settings/constants\";\nimport Loading from \"./Loading\";\n\nconst Plottings = () => {\n    const {plottings, dispatch} = useContext(PlottingsContext);\n    const {basic} = useContext(BasicContext);\n    const [loading, setLoading] = useState(false);\n\n    const image_url = apiServer + '/static/plots/plotting/';\n\n    useEffect(() => {\n        setLoading(true);\n        api.read(basic.current_channels).then(plottings => dispatch({type: 'ADD_PLOTTINGS', payload: {plottings}}))\n    }, [basic]);\n\n    useEffect(() => {\n        setLoading(false);\n    }, [plottings])\n\n    if (Object.keys(plottings).length === 0) return <Loading />;\n\n    return (\n\n        <div className=\"row py-3\">\n            <div className=\"col-sm-12\">\n                <h1>Plottings</h1>\n            </div>\n            {\n                loading\n                    ? <Loading/>\n                    : Object.keys(plottings).map(key => <Plot key={key} image={{id: key, src: image_url + plottings[key]}}\n                                                        data_section=\"data_plottings\"/>)\n            }\n        </div>\n    )\n}\n\nexport default Plottings;\n","\nconst mlReducer = (state, action) => {\n\n    switch (action.type) {\n        case 'ADD_ML':\n            console.log('ADD_ML', action )\n            return {...state, ...action.payload.ml}\n        default:\n            return state;\n    }\n};\n\nexport default mlReducer;\n","import React from 'react';\nimport mlReducer from '../reducers/mlReducer';\n\nexport const MlContext = React.createContext();\n\n\nconst MlContextProvider = (props) => {\n    const [ml, dispatch] = React.useReducer(mlReducer, {});\n    return (\n        <MlContext.Provider value={{ml, dispatch}}>\n            {props.children}\n        </MlContext.Provider>\n    )\n};\n\nexport default MlContextProvider;\n","import axios from 'axios';\nimport {apiServer} from '../settings/constants';\n\nconst endPoint = '/api/machine-learning';\nconst server = apiServer + endPoint\n\nconst api = {\n    read: (current_channels = {channel1: 'HDR-T', channel2: 'FSC-A'}) => {\n        console.log('ml api : ', current_channels);\n        return axios.get(server + '?' + 'ch1=' + current_channels.channel1 + '&ch2=' + current_channels.channel2)\n            .then(res => res.data)\n            .catch(error =>\n                console.error(error)\n            )\n    }\n};\nexport default api;\n","import React, {useEffect, useContext, useState} from 'react';\nimport Plot from './Plot';\nimport {MlContext} from '../contexts/MlContextProvider';\nimport api from '../api/ml';\nimport {BasicContext} from \"../contexts/BasicContextProvider\";\nimport Loading from './Loading';\nimport {apiServer} from \"../settings/constants\";\n\nconst Ml = () => {\n    const {ml, dispatch} = useContext(MlContext);\n    const {basic} = useContext(BasicContext);\n    const [loading, setLoading] = useState(false);\n    console.log('ML basic', basic)\n\n    const image_url = apiServer + '/static/plots/machinelearning/';\n\n    useEffect(() => {\n        setLoading(true);\n        api.read(basic.current_channels).then(ml => dispatch({type: 'ADD_ML', payload: {ml}}))\n    }, [basic]);\n\n    useEffect(() => {\n        setLoading(false);\n    }, [ml])\n\n    if (Object.keys(ml).length === 0) return <Loading />;\n\n    return (\n\n        <div className=\"row py-3\">\n            <div className=\"col-sm-12\">\n                <h1>ML Plots</h1>\n            </div>\n            {\n                loading\n                    ? <Loading/>\n                    : Object.keys(ml).map(key => <Plot key={key} image={{id: key, src: image_url + ml[key]}}\n                                                 data_section=\"data_ml\"/>)\n            }\n        </div>\n    )\n};\n\nexport default Ml;\n","import axios from 'axios';\nimport {apiServer} from '../settings/constants';\nconst endPoint = '/api/basic';\nconst server = apiServer + endPoint;\n\nconst api = {\n    read: () =>\n        axios.get(server)\n            .then(res => res.data)\n            .catch(error =>\n                console.error(error)\n            )\n};\nexport default api;\n","import React, {useContext} from 'react';\nimport axios from 'axios';\nimport {BasicContext} from \"../contexts/BasicContextProvider\";\nimport api from \"../api/basic\";\nimport {apiServer} from \"../settings/constants\";\n\nconst Upload = () => {\n    const fileRef = React.createRef();\n    const {basic, dispatch} = useContext(BasicContext);\n\n    const uploadFile = () => {\n        const formData = new FormData();\n        const files = fileRef.current.files;\n        formData.append(\"fcs_file\", files[0]);\n        axios.post(apiServer + '/api/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(data => {\n            console.log('File uploaded');\n            api.read().then(basic => {\n                if (basic) {\n                    dispatch({\n                        type: 'ADD_BASIC',\n                        payload: {channels: basic}\n                    });\n                    window.location.reload(false);\n                }\n            });\n        }).catch(err => console.log('Error occurred ', err))\n    };\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12 order-md-0\">\n                <h2 className=\"mb-3\">Upload FCS File</h2>\n                <form method=\"post\" encType=\"multipart/form-data\" action=\"/api/upload\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 mb-3\">\n\n                            <div className=\"input-group\">\n                                <div className=\"custom-file\">\n                                    <input ref={fileRef} type=\"file\" className=\"custom-file-input\" id=\"fcs_file\"\n                                           name=\"fcs_file\"\n                                           multiple\n                                           aria-describedby=\"fcs_file\"/>\n                                    <label className=\"custom-file-label\" htmlFor=\"fcs_file\">Choose file</label>\n                                </div>\n                                <div className=\"input-group-append\">\n                                    <input className=\"btn btn-outline-secondary\" type=\"button\" id=\"upload\"\n                                           value=\"Upload\" onClick={(e) => {\n                                        e.preventDefault();\n                                        uploadFile();\n                                    }}/>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <hr className=\"mb-4\"/>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Upload;\n","import React, {useContext, useEffect} from 'react';\nimport {BasicContext} from \"../contexts/BasicContextProvider\";\nimport api from \"../api/basic\";\n\nconst Options = (props) => {\n    const {channels} = props;\n    console.log('Options: ', props)\n    if (!channels) return <option value=\"1\">Loading...</option>\n    return (\n        channels.map(ch => <option key={ch} value={ch}>{ch}</option>)\n    )\n};\n\nconst Basic = () => {\n    const {basic, dispatch} = useContext(BasicContext);\n    const [current_channels, setCurrentChannels] = React.useState({channel1: '1', channel2: '22'});\n    const [channels1, setChannels1] = React.useState([]);\n    const [channels2, setChannels2] = React.useState([]);\n    const [attributes, setAttributes] = React.useState({transformation: 'hlog', bins: 100});\n\n    useEffect(() => {\n        console.log('useEffect 1', basic)\n        api.read().then(basic => {\n            if (basic) {\n                dispatch({\n                    type: 'ADD_BASIC',\n                    payload: {channels: basic}\n                });\n                setCurrentChannels({channel1: basic[0], channel2: basic[1]});\n            }\n        })\n    }, []);\n\n    useEffect(() => {\n        console.log('useEffect 2', basic);\n        if (basic && basic.channels && basic.channels.length) {\n            const channels1 = [...basic.channels];\n            setChannels1(channels1);\n            const channels2 = [...basic.channels];\n            channels2.shift();\n            setChannels2(channels2);\n            console.log('useEffect 2 IF ', channels1, channels2);\n        }\n    }, [basic]);\n\n    const setContextChannels = () => {\n        api.read().then(() => dispatch({type: 'SET_CHANNELS', payload: {current_channels}}))\n    };\n\n    const setStateAttributes = (atts) => {\n        setAttributes({...attributes, ...atts});\n        console.log('setStateAttributes', atts, attributes)\n    };\n\n    const setContextAttributes = () => {\n        api.read().then(() => dispatch({type: 'SET_ATTRIBUTES', payload: {attributes}}))\n    };\n\n    if (Object.keys(basic).length === 0) return <p>Loading...</p>;\n\n    return (\n        <div className=\"row\" id=\"basic-div\">\n            <div className=\"col-md-12 order-md-0\">\n                <h1>Basic info </h1>\n                <p className=\"lead\" id=\"basic-info\"></p>\n\n                <select className=\"form-control\" id=\"channel-names-1\" onChange={(e) => setStateAttributes({\n                    channel1: e.target.value\n                })}>\n                    <Options channels={channels1}/>\n                </select>\n                <br/>\n                <select className=\"form-control\" id=\"channel-names-2\" onChange={(e) => setStateAttributes({\n                    channel2: e.target.value\n                })}>\n                    <Options channels={channels2}/>\n                </select>\n                <br/>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <select className=\"form-control\" id=\"transformations\" onChange={(e) => setStateAttributes({\n                            transformation: e.target.value\n                        })}>\n                            <Options channels={['hlog', 'tlog']}/>\n                        </select>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <input type=\"number\" value={attributes.bins} className=\"form-control\" id=\"bins\" onChange={(e) => setStateAttributes({\n                            bins: e.target.value\n                        })}/>\n                    </div>\n                </div>\n\n                <br/>\n                <button onClick={() => setContextAttributes()} className=\"btn btn-lg btn-success\">\n                    <i className=\"fas fa-chart-line\"></i> Display\n                </button>\n\n                <hr className=\"mb-4\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default Basic;\n","import React from 'react';\nimport Navbar from './components/Navbar'\nimport Container from './components/Container'\nimport Plottings from './components/Plottings'\nimport Ml from './components/Ml'\nimport Upload from './components/Upload'\nimport Basic from './components/Basic'\nimport ThemeContextProvider from './contexts/ThemeContextProvider'\nimport BasicContextProvider from './contexts/BasicContextProvider';\nimport PlottingsContextProvider from './contexts/PlottingsContextProvider';\nimport MlContextProvider from './contexts/MlContextProvider';\n\nfunction App() {\n    return (\n        <>\n            <ThemeContextProvider>\n                <Navbar/>\n                <Container>\n                    <BasicContextProvider>\n                        <Upload/>\n                        <Basic/>\n                        <PlottingsContextProvider>\n                            <Plottings/>\n                        </PlottingsContextProvider>\n                        <MlContextProvider>\n                            <Ml/>\n                        </MlContextProvider>\n                    </BasicContextProvider>\n                </Container>\n            </ThemeContextProvider>\n\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}